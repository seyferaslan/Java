
package flighttrackapp;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;


public class FlightTrack extends javax.swing.JFrame {
    Timer timer = new Timer(1000,null);
    private int timemin=0;
    private int timehour=0;
    private int timeday=0;
    private String day="";
    private int flightNumber = 0;
    private HashMap<Integer,Flight> ucuslar = new HashMap<>();
    private int secilirow=0;
    private int secilirow2=0;
    private int seciliflightnumber=0;
    Flight   tmpnesne;
    byte[] girilen;

    public Flight getTmpnesne() {
        return tmpnesne;
    }

    public int getSeciliflightnumber() {
        return seciliflightnumber;
    }

    public int getTimemin() {
        return timemin;
    }

    public int getTimehour() {
        return timehour;
    }

    public int getTimeday() {
        return timeday;
    }

    public HashMap<Integer, Flight> getUcuslar() {
        return ucuslar;
    }
    private static final Logger LOG = Logger.getLogger(FlightTrack.class.getName());
    /**
     * Creates new form FlightTrack
     */
    public FlightTrack() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        ucustablosu = new javax.swing.JTable();
        timelabel = new javax.swing.JLabel();
        timerday = new javax.swing.JTextField();
        timerhour = new javax.swing.JTextField();
        timerminute = new javax.swing.JTextField();
        starttimer = new javax.swing.JButton();
        pausetimer = new javax.swing.JButton();
        stoptimer = new javax.swing.JButton();
        addflightbutton = new javax.swing.JButton();
        deletebutton = new javax.swing.JButton();
        showdetailsbutton = new javax.swing.JButton();
        settimer = new javax.swing.JButton();
        timeronbutton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        deptimeday = new javax.swing.JTextField();
        aircraftmodel = new javax.swing.JTextField();
        deptimehour = new javax.swing.JTextField();
        deptimemin = new javax.swing.JTextField();
        arrtimeday = new javax.swing.JTextField();
        arrtimehour = new javax.swing.JTextField();
        arrtimemin = new javax.swing.JTextField();
        arrcitybox = new javax.swing.JComboBox<>();
        depcitybox = new javax.swing.JComboBox<>();
        addcitybutton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        editflightbutton = new javax.swing.JButton();
        progressbar = new javax.swing.JProgressBar();
        infolabel = new javax.swing.JLabel();
        grafik = new javax.swing.JButton();
        delaybutton = new javax.swing.JButton();
        permissionbutton = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar2.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FLIGHT TRACK APP");
        setResizable(false);

        ucustablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Departure City", "Departure Time", "Arrival City", "Arrival Time", "Aircraft Model", "Flight Number"
            }
        ));
        ucustablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ucustablosuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ucustablosu);

        timelabel.setText("             TIME");

        starttimer.setBackground(new java.awt.Color(0, 153, 102));
        starttimer.setText("START/RESUME");
        starttimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                starttimerActionPerformed(evt);
            }
        });

        pausetimer.setText("PAUSE");
        pausetimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pausetimerActionPerformed(evt);
            }
        });

        stoptimer.setText("STOP");
        stoptimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stoptimerActionPerformed(evt);
            }
        });

        addflightbutton.setBackground(new java.awt.Color(142, 209, 209));
        addflightbutton.setText("ADD FLIGHT");
        addflightbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addflightbuttonActionPerformed(evt);
            }
        });

        deletebutton.setText("DELETE FLIGHT");
        deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebuttonActionPerformed(evt);
            }
        });

        showdetailsbutton.setText("SHOW DETAILS");
        showdetailsbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showdetailsbuttonActionPerformed(evt);
            }
        });

        settimer.setBackground(new java.awt.Color(255, 153, 51));
        settimer.setText("SET");
        settimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settimerActionPerformed(evt);
            }
        });

        timeronbutton.setBackground(new java.awt.Color(255, 0, 0));
        timeronbutton.setText("TIMER ON");
        timeronbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeronbuttonActionPerformed(evt);
            }
        });

        jLabel1.setText("  DAY");

        jLabel2.setText(" HOUR");

        jLabel3.setText("  MIN");

        jLabel4.setText("Departure City");

        jLabel5.setText("Departure Time");

        jLabel6.setText("Arrival City");

        jLabel7.setText("Arrival Time");

        jLabel8.setText("Aircraft Model");

        arrcitybox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tokio", "Ankara", "Munich", "Paris", "London" }));

        depcitybox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tokio", "Ankara", "Munich", "Paris", "London" }));

        addcitybutton.setText("ADD CITY");
        addcitybutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcitybuttonActionPerformed(evt);
            }
        });

        jLabel9.setText("day");

        jLabel10.setText("hour");

        jLabel11.setText("min");

        jLabel12.setText("day");

        jLabel13.setText("hour");

        jLabel14.setText("min");

        editflightbutton.setText("EDIT FLIGHT");
        editflightbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editflightbuttonActionPerformed(evt);
            }
        });

        progressbar.setStringPainted(true);

        infolabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        infolabel.setForeground(new java.awt.Color(51, 153, 0));

        grafik.setText("grafik");
        grafik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grafikActionPerformed(evt);
            }
        });

        delaybutton.setText("DELAY");
        delaybutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delaybuttonActionPerformed(evt);
            }
        });

        permissionbutton.setText("DON'T GÄ°VE PERMISSION TO LAND");
        permissionbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                permissionbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(timerday)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(timerhour, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(timerminute)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(timeronbutton, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                    .addComponent(pausetimer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(stoptimer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(settimer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(233, 233, 233)
                                        .addComponent(progressbar, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(grafik)
                                        .addGap(11, 11, 11))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(146, 146, 146)
                                        .addComponent(delaybutton, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(permissionbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(depcitybox, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(29, 29, 29)
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel9)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel10)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel11))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(deptimeday, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(deptimehour, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(deptimemin, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(10, 10, 10)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(arrcitybox, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(jLabel6)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(jLabel12)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel13)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel14)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(17, 17, 17)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(jLabel7)
                                                        .addGap(36, 36, 36))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(arrtimeday, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(arrtimehour, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(arrtimemin, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(9, 9, 9)))))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(aircraftmodel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                                                .addComponent(addflightbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(deletebutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(showdetailsbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addcitybutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(editflightbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(53, 53, 53))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(timelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(starttimer)
                        .addGap(65, 65, 65)
                        .addComponent(infolabel, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deptimeday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aircraftmodel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deptimehour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deptimemin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrtimeday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrtimehour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrtimemin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrcitybox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(depcitybox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addflightbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(deletebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editflightbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(showdetailsbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addcitybutton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(progressbar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(grafik))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(infolabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(settimer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(starttimer)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(pausetimer)
                                .addGap(7, 7, 7)
                                .addComponent(stoptimer))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(permissionbutton, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                                    .addComponent(delaybutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(timeronbutton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(timerday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timerhour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timerminute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(timelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void starttimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_starttimerActionPerformed
        
        timer.start();
    }//GEN-LAST:event_starttimerActionPerformed

    private void settimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settimerActionPerformed
        timeday=Integer.parseInt(timerday.getText().trim());
        timehour=Integer.parseInt(timerhour.getText().trim());
        timemin=Integer.parseInt(timerminute.getText().trim());
    }//GEN-LAST:event_settimerActionPerformed

    private void pausetimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pausetimerActionPerformed
        timer.stop();
        
    }//GEN-LAST:event_pausetimerActionPerformed

    private void stoptimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stoptimerActionPerformed
        timer.stop();
        timeday=0;
        timemin=0;
        timehour=0;
        timelabel.setText("             TIME");
    }//GEN-LAST:event_stoptimerActionPerformed

    public String dayMethod(int timeday){
        String dayis="";
        switch (timeday) {
                    case 0:
                        dayis="Monday";
                        break;
                    case 1:
                        dayis="Tuesday";
                        break;
                    case 2:
                        dayis="Wednesday";
                        break;
                    case 3:
                        dayis="Thursday";
                        break;
                    case 4:
                        dayis="Friday";
                        break;
                    case 5:
                        dayis="Saturday";
                        break;
                    case 6:
                        dayis="Sunday";
                        break;    
                    default:
                        throw new AssertionError();
                }
        return dayis;
    }
            
    private void timeronbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeronbuttonActionPerformed
        timer.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                timemin++;
                if(timemin==60){
                    timehour++;
                    timemin=0;
                }
                if(timehour==24){
                    timeday++;
                    timehour=0;
                }
                if(timeday==7){
                    timeday=0;
                }
                day=dayMethod(timeday);
                timelabel.setText(day+"       "+String.valueOf(timehour)+":"+String.valueOf(timemin));
            }
        });
    }//GEN-LAST:event_timeronbuttonActionPerformed

    private void addflightbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addflightbuttonActionPerformed
        DefaultTableModel model = (DefaultTableModel) ucustablosu.getModel();
        if(deptimemin.getText().trim().equals("") || deptimeday.getText().trim().equals("") || deptimehour.getText().trim().equals("") ||   arrtimeday.getText().trim().equals("") || arrtimehour.getText().trim().equals("") && arrtimemin.getText().trim().equals("") || aircraftmodel.getText().trim().equals("") ){
            JOptionPane.showMessageDialog(this,"LÃ¼tfen tÃ¼m alanlarÄ± doldurunuz." );
        }
        else{
        flightNumber++;
        String day1=dayMethod(Integer.valueOf(deptimeday.getText().trim()));
        String day2=dayMethod(Integer.valueOf(arrtimeday.getText().trim()));        
        String deptime=day1+" "+deptimehour.getText().trim()+":"+deptimemin.getText().trim();
        String arrtime=day2+" "+arrtimehour.getText().trim()+":"+arrtimemin.getText().trim();
        Object[] eklenen = {depcitybox.getSelectedItem().toString(),deptime,arrcitybox.getSelectedItem().toString(),arrtime,aircraftmodel.getText(),String.valueOf(flightNumber)};
        model.addRow(eklenen);
        Flight aFlight = new Flight(Integer.valueOf(deptimeday.getText().trim()),Integer.valueOf(deptimehour.getText().trim()),Integer.valueOf(deptimemin.getText().trim()),Integer.valueOf(arrtimeday.getText().trim()),Integer.valueOf(arrtimehour.getText().trim()),Integer.valueOf(arrtimemin.getText().trim()),depcitybox.getSelectedItem().toString(),arrcitybox.getSelectedItem().toString(),aircraftmodel.getText().trim(),0,this,1);                   
        ucuslar.put(flightNumber ,aFlight);
        aFlight.start();
        FileOutputStream out = null;
            try {
                out = new FileOutputStream("out.txt",true);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(FlightTrack.class.getName()).log(Level.SEVERE, null, ex);
            }
        girilen=ucuslar.get(flightNumber).toString().getBytes();
            try {
                out.write(girilen);
            } catch (IOException ex) {
                Logger.getLogger(FlightTrack.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
       
    }//GEN-LAST:event_addflightbuttonActionPerformed

    private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebuttonActionPerformed
        DefaultTableModel model = (DefaultTableModel)ucustablosu.getModel();
        secilirow = ucustablosu.getSelectedRow();
        if(secilirow == -1){
            if(model.getRowCount()==0){
                JOptionPane.showMessageDialog(this, "Åu anda herhangi bir uÃ§uÅ yok!");
            }
            else{
                JOptionPane.showMessageDialog(this, "LÃ¼tfen bir uÃ§uÅ seÃ§iniz!");
            }
        }
        else{
        model.removeRow(secilirow);
        ucuslar.remove(Integer.valueOf(model.getValueAt(secilirow, 5).toString()));
        }
    }//GEN-LAST:event_deletebuttonActionPerformed

    private void ucustablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ucustablosuMouseClicked
        DefaultTableModel model = (DefaultTableModel) ucustablosu.getModel();
        secilirow = ucustablosu.getSelectedRow();
        if(secilirow != -1){
        seciliflightnumber = Integer.valueOf(model.getValueAt(secilirow, 5).toString());
        deptimeday.setText(String.valueOf(ucuslar.get(seciliflightnumber).getDepday()));
        depcitybox.setSelectedItem((ucuslar.get(seciliflightnumber).getDeparturecity()));
        deptimehour.setText(String.valueOf(ucuslar.get(seciliflightnumber).getDephour()));
        deptimemin.setText(String.valueOf(ucuslar.get(seciliflightnumber).getDepmin()));
        arrcitybox.setSelectedItem((ucuslar.get(seciliflightnumber).getArrivalcity()));
        arrtimeday.setText(String.valueOf(ucuslar.get(seciliflightnumber).getArrday()));
        arrtimehour.setText(String.valueOf(ucuslar.get(seciliflightnumber).getArrhour()));
        arrtimemin.setText(String.valueOf(ucuslar.get(seciliflightnumber).getArrmin()));
        aircraftmodel.setText(ucuslar.get(seciliflightnumber).getAircraftmodel());
        }
    }//GEN-LAST:event_ucustablosuMouseClicked

    private void addcitybuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcitybuttonActionPerformed
        String yenisehir=JOptionPane.showInputDialog("Åehir");
        if(yenisehir!=null){
            if(yenisehir.trim().equals("")){
                JOptionPane.showMessageDialog(this, "Bir Åehir girmediniz!");
            }
            else{
                depcitybox.addItem(yenisehir);
                arrcitybox.addItem(yenisehir);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Ä°Ålem iptal edildi.");
        }
    }//GEN-LAST:event_addcitybuttonActionPerformed

    private void editflightbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editflightbuttonActionPerformed
        DefaultTableModel model = (DefaultTableModel) ucustablosu.getModel();
        secilirow = ucustablosu.getSelectedRow();
        if(secilirow==-1){
            if(model.getRowCount()==0){
                JOptionPane.showMessageDialog(this, "Herhangi bir uÃ§uÅ yok!");
            }
            else{
                JOptionPane.showMessageDialog(this, "Herhangi bir uÃ§uÅ seÃ§ili deÄil!");
            }
        }
        else{
        int tmpflightnumber = Integer.valueOf(model.getValueAt(secilirow, 5).toString());
        ucuslar.get(tmpflightnumber).setAircraftmodel(aircraftmodel.getText());
        ucuslar.get(tmpflightnumber).setArrday(Integer.valueOf(arrtimeday.getText()));
        ucuslar.get(tmpflightnumber).setArrhour(Integer.valueOf(arrtimehour.getText()));
        ucuslar.get(tmpflightnumber).setArrmin(Integer.valueOf(arrtimemin.getText()));
        ucuslar.get(tmpflightnumber).setArrivalcity(arrcitybox.getSelectedItem().toString());
        ucuslar.get(tmpflightnumber).setDeparturecity(depcitybox.getSelectedItem().toString());
        ucuslar.get(tmpflightnumber).setDepday(Integer.valueOf(deptimeday.getText()));
        ucuslar.get(tmpflightnumber).setDephour(Integer.valueOf(deptimehour.getText()));
        ucuslar.get(tmpflightnumber).setDepmin(Integer.valueOf(deptimemin.getText()));
        String day1 = dayMethod(Integer.valueOf(deptimeday.getText()));
        String day2 = dayMethod(Integer.valueOf(arrtimeday.getText()));
        model.setValueAt(depcitybox.getSelectedItem().toString(), secilirow, 0);
        model.setValueAt(day1+" "+deptimehour.getText().trim()+":"+deptimemin.getText().trim(), secilirow, 1);
        model.setValueAt(arrcitybox.getSelectedItem().toString(), secilirow, 2);
        model.setValueAt(day2+" "+arrtimehour.getText().trim()+":"+arrtimemin.getText().trim(), secilirow, 3);
        model.setValueAt(aircraftmodel.getText().trim(), secilirow, 4);
        
        }
        
    }//GEN-LAST:event_editflightbuttonActionPerformed

   
    
    private void showdetailsbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showdetailsbuttonActionPerformed
        
        DefaultTableModel model = (DefaultTableModel)ucustablosu.getModel();
        secilirow = ucustablosu.getSelectedRow();
        seciliflightnumber = Integer.valueOf(model.getValueAt(secilirow, 5).toString());
        tmpnesne = ucuslar.get(seciliflightnumber);
        if(tmpnesne != null){
            FlightDetails newframe = new FlightDetails(tmpnesne,this);
            newframe.setVisible(true);
        }   
    }//GEN-LAST:event_showdetailsbuttonActionPerformed

    private void grafikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grafikActionPerformed
        DefaultTableModel model = (DefaultTableModel)ucustablosu.getModel();
        Timer timer1 = new Timer(100,null);
        timer1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                if(ucuslar.size()<1){
                    progressbar.setValue(0);
                }
                else{
                for(int i=0; i<model.getRowCount();i++){
                    if(ucuslar.get(Integer.valueOf(model.getValueAt(i, 5).toString())).getSay()==100 && ucuslar.get(Integer.valueOf(model.getValueAt(i, 5).toString())).getPermission()==1){
                        ucuslar.remove(Integer.valueOf(model.getValueAt(i, 5).toString()));
                        model.removeRow(i);
                    } 
                }
                tmpnesne = ucuslar.get(seciliflightnumber);
                if(tmpnesne == null){
                    progressbar.setValue(0);
                }
                else{
                    progressbar.setValue(tmpnesne.getSay());
                }
                }
            }
        });
        timer1.start();
    }//GEN-LAST:event_grafikActionPerformed

    private void permissionbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_permissionbuttonActionPerformed
        tmpnesne=ucuslar.get(seciliflightnumber);
        if(tmpnesne != null){
            if(tmpnesne.getPermission()==1){
                tmpnesne.setPermission(0);
            }
            else{
                tmpnesne.setPermission(1);
            }
        }
    }//GEN-LAST:event_permissionbuttonActionPerformed

    private void delaybuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delaybuttonActionPerformed
        tmpnesne = ucuslar.get(seciliflightnumber);
        if(tmpnesne != null){
            if(tmpnesne.getDepmin()<45){
                tmpnesne.setDepmin(tmpnesne.getDepmin()+15);
            }
            else{
                tmpnesne.setDephour(tmpnesne.getDephour()+1);
                int tmpsayi=15-(60-tmpnesne.getDepmin());
                tmpnesne.setDepmin(tmpsayi);
            }
            infolabel.setText("UÃ§ak 15 dk ertelendi.");
        }
    }//GEN-LAST:event_delaybuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlightTrack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlightTrack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlightTrack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlightTrack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FlightTrack().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addcitybutton;
    private javax.swing.JButton addflightbutton;
    private javax.swing.JTextField aircraftmodel;
    private javax.swing.JComboBox<String> arrcitybox;
    private javax.swing.JTextField arrtimeday;
    private javax.swing.JTextField arrtimehour;
    private javax.swing.JTextField arrtimemin;
    private javax.swing.JButton delaybutton;
    private javax.swing.JButton deletebutton;
    private javax.swing.JComboBox<String> depcitybox;
    private javax.swing.JTextField deptimeday;
    private javax.swing.JTextField deptimehour;
    private javax.swing.JTextField deptimemin;
    private javax.swing.JButton editflightbutton;
    private javax.swing.JButton grafik;
    private javax.swing.JLabel infolabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pausetimer;
    private javax.swing.JButton permissionbutton;
    private javax.swing.JProgressBar progressbar;
    private javax.swing.JButton settimer;
    private javax.swing.JButton showdetailsbutton;
    private javax.swing.JButton starttimer;
    private javax.swing.JButton stoptimer;
    private javax.swing.JLabel timelabel;
    private javax.swing.JTextField timerday;
    private javax.swing.JTextField timerhour;
    private javax.swing.JTextField timerminute;
    private javax.swing.JButton timeronbutton;
    private javax.swing.JTable ucustablosu;
    // End of variables declaration//GEN-END:variables

   
}
